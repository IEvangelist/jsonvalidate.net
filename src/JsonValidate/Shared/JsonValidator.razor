@using Newtonsoft.Json

<div>
    <div class="form-group">
        <label for="text">Enter JSON</label>
        <textarea class="form-control" id="text" rows="10" bind="@Input"></textarea>
    </div>
    <div class="form-check">
        <input type="checkbox" class="form-check-input" id="format" bind="@ShouldFormat"/>
        <label class="form-check-label" for="format">Format on validate</label>
    </div>        
    <div class="form-group">
        <button class="btn btn-primary" onclick="@Validate">Validate</button>
        <button class="btn btn-secondary" onclick="@Clear">Clear</button>
    </div>    
    @if (IsError)
    {
        <div class="alert alert-danger" role="alert">
            @Message
        </div>
    }
    else if (!string.IsNullOrEmpty(Message)) {
        <div class="alert alert-success" role="alert">
            @Message
        </div>
    }
</div>

@functions {
    string Input { get; set; }
    bool IsError { get; set; }
    string Message { get; set; }
    bool ShouldFormat { get; set; } = true;

    void Validate() {
        try {
            var objectt = JsonConvert.DeserializeObject(Input);
            if (ShouldFormat) {
                Input = JsonConvert.SerializeObject(objectt, Formatting.Indented);
            }
            IsError = false;
            Message = "JSON valid!";
        }
        catch (Exception e) {
            IsError = true;
            Message = e.Message;
        }
    }

    void Clear() {
        Input = string.Empty;
        IsError = false;
        Message = string.Empty;
        ShouldFormat = true;    
    }
}